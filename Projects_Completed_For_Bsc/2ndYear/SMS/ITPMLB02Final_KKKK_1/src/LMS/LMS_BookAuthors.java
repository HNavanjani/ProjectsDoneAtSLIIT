/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LMS;
import DBConnection.DBConnect;
import SPMS.dbConnection;

import LMS.code.Author;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author sanjalee
 */
public class LMS_BookAuthors extends javax.swing.JInternalFrame {

    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    
    public LMS_BookAuthors() {
        initComponents();
        
        conn = DBConnect.connect();
        
        tableload();
    }
    
    public void tableload(){
    
        String sql_viewAuthors = "SELECT * FROM lms_author";
        try {
            pst = conn.prepareStatement(sql_viewAuthors);
            rs = pst.executeQuery();
    
            jTableAuthors.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(LMS_BookCategories.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewauthorpanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableAuthors = new javax.swing.JTable();
        btn_addauthor = new javax.swing.JButton();
        btn_updateAuthor = new javax.swing.JButton();
        btn_deleteAuthor = new javax.swing.JButton();
        authornamebox = new javax.swing.JTextField();
        labelid = new javax.swing.JLabel();

        viewauthorpanel.setBackground(new java.awt.Color(255, 255, 230));

        jTableAuthors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAuthors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAuthorsMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTableAuthors);

        btn_addauthor.setBackground(new java.awt.Color(0, 179, 60));
        btn_addauthor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_addauthor.setForeground(new java.awt.Color(255, 255, 255));
        btn_addauthor.setText("Insert");
        btn_addauthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addauthorActionPerformed(evt);
            }
        });

        btn_updateAuthor.setBackground(new java.awt.Color(0, 77, 153));
        btn_updateAuthor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_updateAuthor.setForeground(new java.awt.Color(255, 255, 255));
        btn_updateAuthor.setText("Update");
        btn_updateAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateAuthorActionPerformed(evt);
            }
        });

        btn_deleteAuthor.setBackground(new java.awt.Color(255, 26, 26));
        btn_deleteAuthor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_deleteAuthor.setForeground(new java.awt.Color(255, 255, 255));
        btn_deleteAuthor.setText("Delete");
        btn_deleteAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteAuthorActionPerformed(evt);
            }
        });

        labelid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelid.setForeground(new java.awt.Color(0, 26, 77));
        labelid.setText("ID");

        javax.swing.GroupLayout viewauthorpanelLayout = new javax.swing.GroupLayout(viewauthorpanel);
        viewauthorpanel.setLayout(viewauthorpanelLayout);
        viewauthorpanelLayout.setHorizontalGroup(
            viewauthorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewauthorpanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(viewauthorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(authornamebox, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelid))
                .addGap(36, 36, 36)
                .addGroup(viewauthorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_updateAuthor)
                    .addComponent(btn_addauthor, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_deleteAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(381, Short.MAX_VALUE))
        );
        viewauthorpanelLayout.setVerticalGroup(
            viewauthorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewauthorpanelLayout.createSequentialGroup()
                .addGroup(viewauthorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewauthorpanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(labelid)
                        .addGap(33, 33, 33)
                        .addGroup(viewauthorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(authornamebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_addauthor))
                        .addGap(39, 39, 39)
                        .addComponent(btn_updateAuthor)
                        .addGap(42, 42, 42)
                        .addComponent(btn_deleteAuthor))
                    .addGroup(viewauthorpanelLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(331, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(viewauthorpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 834, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(viewauthorpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addauthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addauthorActionPerformed

        String name = authornamebox.getText();

        Author a = new Author();
        try {
            a.addAuthor(name);
        } catch (SQLException ex) {
            Logger.getLogger(LMS_LibraryManagementSystem_1.class.getName()).log(Level.SEVERE, null, ex);
        }

        authornamebox.setText(null);
        
        tableload();

    }//GEN-LAST:event_btn_addauthorActionPerformed

    private void btn_deleteAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteAuthorActionPerformed
        
        int isConfirmed = JOptionPane.showConfirmDialog(null, "Do you really want to delete this information?");
        
        Author authorinstance = new Author();
        
        if(isConfirmed == 0){
        
            String author = authornamebox.getText();
            
            int id = 0;
            try {
                id = authorinstance.getOne(author);
            } catch (SQLException ex) {
                Logger.getLogger(LMS_BookCategories.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            String sql_DeleteAuthor = "DELETE FROM lms_author WHERE id = '"+ id +"'";
            
            try {
                pst = conn.prepareStatement(sql_DeleteAuthor);
                pst.execute();
            } catch (SQLException ex) {
                Logger.getLogger(LMS_BookCategories.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            labelid.setText("ID");
            authornamebox.setText(null);
            
            tableload();
        
        }
    }//GEN-LAST:event_btn_deleteAuthorActionPerformed

    private void jTableAuthorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAuthorsMouseClicked
        
        int raw = jTableAuthors.getSelectedRow();
        
        String id = jTableAuthors.getValueAt(raw, 0).toString();
        String author = jTableAuthors.getValueAt(raw, 1).toString();
        
        labelid.setText(id);
        authornamebox.setText(author);
    }//GEN-LAST:event_jTableAuthorsMouseClicked

    private void btn_updateAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateAuthorActionPerformed
        Author authorinstance = new Author();
        
        String author = authornamebox.getText();
            //System.out.println(author);
        int id = Integer.parseInt(labelid.getText());
        
        int isConfirmed = JOptionPane.showConfirmDialog(null, "Do you really want to update this information?");
        
        if(isConfirmed == 0){
            
            
            authorinstance.update(author, id);

            labelid.setText("ID");
            authornamebox.setText(null);

            tableload();
        }
    }//GEN-LAST:event_btn_updateAuthorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authornamebox;
    private javax.swing.JButton btn_addauthor;
    private javax.swing.JButton btn_deleteAuthor;
    private javax.swing.JButton btn_updateAuthor;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTableAuthors;
    private javax.swing.JLabel labelid;
    private javax.swing.JPanel viewauthorpanel;
    // End of variables declaration//GEN-END:variables
}
