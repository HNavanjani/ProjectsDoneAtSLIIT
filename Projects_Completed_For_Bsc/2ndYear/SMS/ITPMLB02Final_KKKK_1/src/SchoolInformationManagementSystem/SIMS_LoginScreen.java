package SchoolInformationManagementSystem;




import SPMS.StudentInformation;
import SPMS.TeachersInformation;
import AMS.UserClass;
import CMS.CMS_CafeteriaManagementSystem;
import DBConnection.DBConnect;
import EMS.EMS_EmployeeManagementSystem;
import SPMS.SPMS_StudentProfileManageStudent;
 
//import SPMS.dbAccessITPMLB02;
import SPMS.dbConnection;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import DBConnection.DBConnect;
import HMS.HMS_Home;
import LMS.LMS_LibraryManagementSystem_1;

public class SIMS_LoginScreen extends javax.swing.JFrame {
    Connection conn =null;
    PreparedStatement pst = null;
    ResultSet rs=null;
    
//    public String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
//    public String url="jdbc:sqlserver://localhost:24809;databaseName=sms_";
//    public String user="adminK";
//    public String pw="admink";
    
    
    public SIMS_LoginScreen() throws ClassNotFoundException, SQLException {
        initComponents();
         conn = DBConnect.connect();
        
//        Class.forName(driver);
//        conn=DriverManager.getConnection(url, user, pw);
        
        //conn = dbConnection.connectToDb();
        //required( );
        //groupButton( );
        //txt_addid.setEditable(false);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_homelogin = new javax.swing.JButton();
        comboaccess = new javax.swing.JComboBox<>();
        txt_pw = new javax.swing.JPasswordField();
        txt_uname = new javax.swing.JTextField();
        reqh1 = new javax.swing.JLabel();
        reqh2 = new javax.swing.JLabel();
        btn_homelogin1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));
        setMinimumSize(new java.awt.Dimension(1350, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1350, 720));

        jPanel1.setBackground(new java.awt.Color(53, 120, 229));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N
        jPanel1.setFocusable(false);
        jPanel1.setMaximumSize(new java.awt.Dimension(1350, 720));
        jPanel1.setMinimumSize(new java.awt.Dimension(1350, 720));
        jPanel1.setPreferredSize(new java.awt.Dimension(1350, 720));

        jPanel4.setBackground(new java.awt.Color(26, 56, 103));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_SPMS/rsz_logop.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("School Information Management System");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Rahula College Anuradhapura");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(146, 146, 146))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(339, 339, 339))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel8)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(53, 120, 229));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Username :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Password :");

        btn_homelogin.setBackground(new java.awt.Color(32, 159, 199));
        btn_homelogin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_homelogin.setText("Login");
        btn_homelogin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_homelogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_homelogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeloginActionPerformed(evt);
            }
        });

        comboaccess.setBackground(new java.awt.Color(255, 255, 153));
        comboaccess.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboaccess.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<<Select Access Type >>", "Admin", "Staff", "Student", "Matron", "Librarian", "Cafeteria Manager" }));

        txt_pw.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_pw.setForeground(new java.awt.Color(26, 56, 103));
        txt_pw.setToolTipText("Enter your password");

        txt_uname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_uname.setForeground(new java.awt.Color(26, 56, 103));
        txt_uname.setToolTipText("Enter your username");
        txt_uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_unameActionPerformed(evt);
            }
        });

        reqh1.setForeground(new java.awt.Color(255, 0, 0));
        reqh1.setText("*");

        reqh2.setForeground(new java.awt.Color(255, 0, 0));
        reqh2.setText("*");

        btn_homelogin1.setBackground(new java.awt.Color(255, 255, 204));
        btn_homelogin1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_homelogin1.setForeground(new java.awt.Color(255, 255, 255));
        btn_homelogin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_SPMS/exitSystem.png"))); // NOI18N
        btn_homelogin1.setToolTipText("EXIT FROM SYSTEM");
        btn_homelogin1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_homelogin1.setBorderPainted(false);
        btn_homelogin1.setContentAreaFilled(false);
        btn_homelogin1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_homelogin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homelogin1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel2.setText("Login Here");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(btn_homelogin, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(69, 69, 69)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_uname)
                                    .addComponent(txt_pw, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reqh1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reqh2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(btn_homelogin1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboaccess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboaccess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_uname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reqh1))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_pw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reqh2))
                        .addGap(52, 52, 52)
                        .addComponent(btn_homelogin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(69, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_homelogin1)
                        .addContainerGap())))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_SPMS/rsz_map_chart.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)))
                .addGap(143, 143, 143))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1318, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_unameActionPerformed

    private void btn_homeloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeloginActionPerformed

        String user_type = null;
        user_type = comboaccess.getItemAt(comboaccess.getSelectedIndex());
        //if(isEmpty()){ 
            
        
        if(user_type.equals("Admin")){
                try{        
                    String sql = "SELECT * FROM [user] WHERE userID=? AND password=?";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1,txt_uname.getText());
                    pst.setString(2,txt_pw.getText());
                    rs=pst.executeQuery();
                    if(rs.next()){
                        int puserID = rs.getInt(1);
                        UserClass.userID=puserID;
                        String pnic = rs.getString("NIC");
                        UserClass.NIC = pnic;
                        String puname = rs.getString("userName");
                        UserClass.userName = puname;
                        String ppw = rs.getString("password");
                        UserClass.password = ppw;
                        String pfname = rs.getString("firstName");
                        UserClass.firstName = pfname;
                        String plname = rs.getString("lastName");
                        UserClass.lastName = plname;
                        String pemail = rs.getString("email");
                        UserClass.email = pemail;
                        int pphhone = rs.getInt(8);
                        UserClass.phone=pphhone;
                        String paccess = rs.getString("AccessType");
                        UserClass.AccessType = paccess;
                        
                        JOptionPane.showMessageDialog(null, "Successfully logged in...");
                        dispose();
                        new SIMS_DashBoard().setVisible(true);
//                        new CMS_CafeteriaManagementSystem().setVisible(true);
//                        new HMS_Home().setVisible(true);
//                        new LMS_LibraryManagementSystem().setVisible(true);
//                        new EMS_EmployeeManagementSystem().setVisible(true);
//                        new TMS_Timetablemangemnet().setVisible(true);
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Username and password not matched !");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        
        if(user_type.equals("Matron")){
                try{        
                    String sql = "SELECT * FROM [user] WHERE userID=? AND password=?";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1,txt_uname.getText());
                    pst.setString(2,txt_pw.getText());
                    rs=pst.executeQuery();
                    if(rs.next()){
                        int puserID = rs.getInt(1);
                        UserClass.userID=puserID;
                        String pnic = rs.getString("NIC");
                        UserClass.NIC = pnic;
                        String puname = rs.getString("userName");
                        UserClass.userName = puname;
                        String ppw = rs.getString("password");
                        UserClass.password = ppw;
                        String pfname = rs.getString("firstName");
                        UserClass.firstName = pfname;
                        String plname = rs.getString("lastName");
                        UserClass.lastName = plname;
                        String pemail = rs.getString("email");
                        UserClass.email = pemail;
                        int pphhone = rs.getInt(8);
                        UserClass.phone=pphhone;
                        String paccess = rs.getString("AccessType");
                        UserClass.AccessType = paccess;
                        
                        JOptionPane.showMessageDialog(null, "Successfully logged in...");
                        dispose();
                       new HMS_Home().setVisible(true);

                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Username and password not matched !");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        
        if(user_type.equals("Librarian")){
                try{        
                    String sql = "SELECT * FROM [user] WHERE userID=? AND password=?";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1,txt_uname.getText());
                    pst.setString(2,txt_pw.getText());
                    rs=pst.executeQuery();
                    if(rs.next()){
                        int puserID = rs.getInt(1);
                        UserClass.userID=puserID;
                        String pnic = rs.getString("NIC");
                        UserClass.NIC = pnic;
                        String puname = rs.getString("userName");
                        UserClass.userName = puname;
                        String ppw = rs.getString("password");
                        UserClass.password = ppw;
                        String pfname = rs.getString("firstName");
                        UserClass.firstName = pfname;
                        String plname = rs.getString("lastName");
                        UserClass.lastName = plname;
                        String pemail = rs.getString("email");
                        UserClass.email = pemail;
                        int pphhone = rs.getInt(8);
                        UserClass.phone=pphhone;
                        String paccess = rs.getString("AccessType");
                        UserClass.AccessType = paccess;
                        
                        JOptionPane.showMessageDialog(null, "Successfully logged in...");
                        dispose();
                        
                       new LMS_LibraryManagementSystem_1().setVisible(true);

                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Username and password not matched !");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        
        if(user_type.equals("Cafeteria Manager")){
                try{        
                    String sql = "SELECT * FROM [user] WHERE userID=? AND password=?";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1,txt_uname.getText());
                    pst.setString(2,txt_pw.getText());
                    rs=pst.executeQuery();
                    if(rs.next()){
                        int puserID = rs.getInt(1);
                        UserClass.userID=puserID;
                        String pnic = rs.getString("NIC");
                        UserClass.NIC = pnic;
                        String puname = rs.getString("userName");
                        UserClass.userName = puname;
                        String ppw = rs.getString("password");
                        UserClass.password = ppw;
                        String pfname = rs.getString("firstName");
                        UserClass.firstName = pfname;
                        String plname = rs.getString("lastName");
                        UserClass.lastName = plname;
                        String pemail = rs.getString("email");
                        UserClass.email = pemail;
                        int pphhone = rs.getInt(8);
                        UserClass.phone=pphhone;
                        String paccess = rs.getString("AccessType");
                        UserClass.AccessType = paccess;
                        
                        JOptionPane.showMessageDialog(null, "Successfully logged in...");
                        dispose();
                        
                        new CMS_CafeteriaManagementSystem().setVisible(true);
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Username and password not matched !");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        
       
            
            
            
            
            if(user_type.equals("Student")){
                try{        
                    String sql = "SELECT * FROM spms_studentinfo WHERE RegNo=? AND password=?";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1,txt_uname.getText());
                    pst.setString(2,txt_pw.getText());
                    rs=pst.executeQuery();
                    if(rs.next()){
                        int stuid = rs.getInt(1);
                        StudentInformation.stid=stuid;
                        
                        String stdcurrentClass = rs.getString("currentClass");
                        StudentInformation.scurrentClass=stdcurrentClass;
                        
                        String stdfname = rs.getString("firstName");
                        StudentInformation.sfname = stdfname;
                        
                        String stdmname = rs.getString("MiddleName");
                        StudentInformation.smname = stdmname;
                        
                        String stdlname = rs.getString("LastName");
                        StudentInformation.slname = stdlname;
                        
                        Date stddob = rs.getDate("dateOfBirth");
                        StudentInformation.sdob = stddob;
                        
                        String stdgender = rs.getString("gender");
                        StudentInformation.sgender = stdgender;
                        
                        String stdreligion = rs.getString("religion");
                        StudentInformation.sreligion = stdreligion;
                        
                        String stdnationality = rs.getString("nationality");
                        StudentInformation.snationality = stdnationality;
                        
                        String stdemail = rs.getString("email");
                        StudentInformation.semail = stdemail;
                        
                        int stdphone = rs.getInt(11);
                        StudentInformation.sphone=stdphone;
                        
                        String streetNo = rs.getString("streetNo");
                        StudentInformation.streetNo = streetNo;
                        
                        String street = rs.getString("street");
                        StudentInformation.street = street;
                        
                        String city = rs.getString("city");
                        StudentInformation.city = city;
                        
                        String country = rs.getString("country");
                        StudentInformation.country = country;
                        
                        String stdskills = rs.getString("bio");
                        StudentInformation.sskills = stdskills;
                        
                        String stupwd = rs.getString("password");
                        StudentInformation.stdpwd = stupwd;
                        
                        byte[]imagedata=rs.getBytes("profilePic");
                        format = new ImageIcon(imagedata);
                        StudentInformation.sprofilepic = format;
                        
                        String phyName = rs.getString("physicianName");
                        StudentInformation.phyname = phyName;
                        
                        int phyPhone = rs.getInt(20);
                        StudentInformation.phyphone=phyPhone;
                        
                        String stdbloodgroup = rs.getString("bloodGroup");
                        StudentInformation.sbloodgroup = stdbloodgroup;
                        
                        String phyRestr = rs.getString("physicalRestrictions");
                        StudentInformation.phyrestr = phyRestr;
                        
                        String stdmedialert = rs.getString("mediAlert");
                        StudentInformation.medicalalert = stdmedialert;
                        
                        String mediother = rs.getString("otherConditions");
                        StudentInformation.mediother = mediother;
                        
                        String prntnic = rs.getString("parentNIC");
                        StudentInformation.pnic = prntnic;
                        
                        String prntfname = rs.getString("parentFName");
                        StudentInformation.pfname = prntfname;
                        
                        String prntlname = rs.getString("parentLName");
                        StudentInformation.plname = prntlname;
                        
                        int prntphone = rs.getInt(28);
                        StudentInformation.pphone=prntphone;
                        
                        String prntemail = rs.getString("parentEmail");
                        StudentInformation.pemail = prntemail;
                        
                        String prntoccu = rs.getString("occupation");
                        StudentInformation.poccupation = prntoccu;
                        
                        JOptionPane.showMessageDialog(null, "Successfully logged in...");
                        
                        dispose();
                        new SPMS_StudentProfileManageStudent().setVisible(true);
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Username and password not matched !");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
            if(user_type.equals("Staff")){
                try{        
                    String sql = "SELECT * FROM ems_employeedetails WHERE EmployeeID=? AND password=?";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1,txt_uname.getText());
                    pst.setString(2,txt_pw.getText());
                    rs=pst.executeQuery();
                    if(rs.next()){
                        
                        int pTID = rs.getInt(1);
                        TeachersInformation.Tid=pTID;
                        
                        String pTFname = rs.getString("firstName");
                        TeachersInformation.Tfname=pTFname;
                        
                        String pTlname = rs.getString("lastName");
                        TeachersInformation.Tlname=pTlname;
                        
                        String pTgender = rs.getString("gender");
                        TeachersInformation.Tgender=pTgender;
                        
//                        Date pTdob = rs.getDate("dob");
//                        TeachersInformation.Tdob = pTdob;
                        
                        String pTdob = rs.getString("dob");
                        TeachersInformation.Tdob = pTdob;
                        
                        String pTemail = rs.getString("email");
                        TeachersInformation.Temail=pTemail;
                       
                        int pTcontact = rs.getInt(7);
                        TeachersInformation.Tcontact=pTcontact;
                        
                        String pTpossition = rs.getString("position");
                        TeachersInformation.Tpossition=pTpossition;
                        
                        
                        
//                        byte[]imagedata=rs.getBytes("employeepicture");
//                        format = new ImageIcon(imagedata);
//                        TeachersInformation.TPhoto = format;
                        
                        String pTpassword = rs.getString("password");
                        TeachersInformation.Tpassword=pTpassword;
                        
                        JOptionPane.showMessageDialog(null, "Successfully logged in...");
                        dispose();
                        //new SPMS_StudentProfileManageTeacher().setVisible(true);
                        new EMS_EmployeeManagementSystem().setVisible(true);
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Username and password not matched !");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
            else if(user_type.equals("<<Select Access Type >>")){
            JOptionPane.showMessageDialog(null, "Choose Your Access Level !");
            }
            
            
//            if(user_type.equals("Admin")||user_type.equals("Matron")||user_type.equals("Librarian")||user_type.equals("Cafeteria Manager")){
//                
//            }
        //}
        
        //dispose();
        //new SIMS_DashBoard().setVisible(true);
    }//GEN-LAST:event_btn_homeloginActionPerformed

    private void btn_homelogin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homelogin1ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_btn_homelogin1ActionPerformed

  
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SIMS_LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SIMS_LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SIMS_LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SIMS_LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SIMS_LoginScreen().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SIMS_LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(SIMS_LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    private ImageIcon format = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_homelogin;
    private javax.swing.JButton btn_homelogin1;
    private javax.swing.JComboBox<String> comboaccess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel reqh1;
    private javax.swing.JLabel reqh2;
    private javax.swing.JPasswordField txt_pw;
    private javax.swing.JTextField txt_uname;
    // End of variables declaration//GEN-END:variables
}
