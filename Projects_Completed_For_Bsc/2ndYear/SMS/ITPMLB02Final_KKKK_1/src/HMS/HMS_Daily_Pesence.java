/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HMS;

import static HMS_CODE.DailyPresence.Status;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Hashini
 */
public class HMS_Daily_Pesence extends javax.swing.JInternalFrame {
    
     Connection conn = null;
     PreparedStatement pst = null;
     ResultSet rs = null;
     
     
//    public String driver = "com.microsoft.jdbc.SQLServerDriver";
//    public String url = "jdbcsqlserver://localhost::24809:databaseName=smsDB";
//    public String user = "adminK";
//    public String pw = "adminK";

    /**
     * Creates new form Daily_Pesence
     */
    public HMS_Daily_Pesence() {
         
         initComponents();
//         conn = DBConnect.connect();
conn = DBConnection.DBConnect.connect();
         
         
//        Class.forName(driver);
//        conn=DriverManger.getConnection(url,user,pw);
         
          tableload();
          groupButton();
          
        
    }
    
      public void tableload(){
        try {
            String sql = "SELECT SHID,Date,Status,Remark FROM hms_dailypresece";
        
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            dpTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (SQLException e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        presencePanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dpPresent_rad = new javax.swing.JRadioButton();
        dpAbscent_rad = new javax.swing.JRadioButton();
        dpID_txt = new javax.swing.JTextField();
        dpRemark_txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dpADD_but = new javax.swing.JButton();
        dpREMOVE_but = new javax.swing.JButton();
        dpUPDATE_but = new javax.swing.JButton();
        dpSEARCH_but = new javax.swing.JButton();
        dpVIEW_but = new javax.swing.JButton();
        dpDate_DateCH = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dpTable = new javax.swing.JTable();
        dpCLEAR_but = new javax.swing.JButton();
        radioClear = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setMaximumSize(new java.awt.Dimension(1200, 620));
        setMinimumSize(new java.awt.Dimension(1200, 620));
        setPreferredSize(new java.awt.Dimension(1200, 620));

        presencePanel1.setBackground(new java.awt.Color(204, 204, 255));
        presencePanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        presencePanel1.setForeground(new java.awt.Color(0, 0, 255));
        presencePanel1.setMaximumSize(new java.awt.Dimension(1184, 590));
        presencePanel1.setMinimumSize(new java.awt.Dimension(1184, 590));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("SHID");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Remark");

        dpPresent_rad.setText("Present");

        dpAbscent_rad.setText("Abscent");

        dpID_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpID_txtActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Date");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Staus");

        dpADD_but.setBackground(new java.awt.Color(204, 204, 255));
        dpADD_but.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dpADD_but.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_HMS/insert.png"))); // NOI18N
        dpADD_but.setText("Add");
        dpADD_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpADD_butActionPerformed(evt);
            }
        });

        dpREMOVE_but.setBackground(new java.awt.Color(204, 204, 255));
        dpREMOVE_but.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dpREMOVE_but.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_HMS/delete.png"))); // NOI18N
        dpREMOVE_but.setText("Remove");
        dpREMOVE_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpREMOVE_butActionPerformed(evt);
            }
        });

        dpUPDATE_but.setBackground(new java.awt.Color(204, 204, 255));
        dpUPDATE_but.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dpUPDATE_but.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_HMS/update.png"))); // NOI18N
        dpUPDATE_but.setText("Update");
        dpUPDATE_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpUPDATE_butActionPerformed(evt);
            }
        });

        dpSEARCH_but.setBackground(new java.awt.Color(204, 204, 255));
        dpSEARCH_but.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dpSEARCH_but.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_HMS/find.png"))); // NOI18N
        dpSEARCH_but.setText("Search");
        dpSEARCH_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpSEARCH_butActionPerformed(evt);
            }
        });

        dpVIEW_but.setBackground(new java.awt.Color(204, 204, 255));
        dpVIEW_but.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dpVIEW_but.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_HMS/view.png"))); // NOI18N
        dpVIEW_but.setText("View");
        dpVIEW_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpVIEW_butActionPerformed(evt);
            }
        });

        dpDate_DateCH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dpDate_DateCHKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("Daily Presence At Hostel");

        dpTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dpTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dpTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dpTable);

        dpCLEAR_but.setBackground(new java.awt.Color(204, 204, 255));
        dpCLEAR_but.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dpCLEAR_but.setText("Clear");
        dpCLEAR_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpCLEAR_butActionPerformed(evt);
            }
        });

        radioClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout presencePanel1Layout = new javax.swing.GroupLayout(presencePanel1);
        presencePanel1.setLayout(presencePanel1Layout);
        presencePanel1Layout.setHorizontalGroup(
            presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(presencePanel1Layout.createSequentialGroup()
                .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(presencePanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel6))
                    .addGroup(presencePanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(presencePanel1Layout.createSequentialGroup()
                                .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(58, 58, 58)
                                .addComponent(dpID_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(presencePanel1Layout.createSequentialGroup()
                                .addComponent(dpSEARCH_but, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dpVIEW_but, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dpCLEAR_but, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(presencePanel1Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dpRemark_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dpDate_DateCH, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(presencePanel1Layout.createSequentialGroup()
                                        .addComponent(dpPresent_rad)
                                        .addGap(34, 34, 34)
                                        .addComponent(dpAbscent_rad)
                                        .addGap(18, 18, 18)
                                        .addComponent(radioClear))))
                            .addGroup(presencePanel1Layout.createSequentialGroup()
                                .addComponent(dpADD_but, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dpUPDATE_but, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dpREMOVE_but)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
        );
        presencePanel1Layout.setVerticalGroup(
            presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, presencePanel1Layout.createSequentialGroup()
                .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(presencePanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(presencePanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(dpID_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(presencePanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(24, 24, 24)
                                .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioClear, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(dpPresent_rad)
                                        .addComponent(dpAbscent_rad)))
                                .addGap(18, 18, 18)
                                .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(dpRemark_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(dpDate_DateCH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dpADD_but)
                            .addComponent(dpUPDATE_but)
                            .addComponent(dpREMOVE_but))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(presencePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dpSEARCH_but)
                            .addComponent(dpVIEW_but)
                            .addComponent(dpCLEAR_but))))
                .addGap(149, 149, 149))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(presencePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(presencePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dpVIEW_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpVIEW_butActionPerformed

        presencePanel1.removeAll();
        HMS_View_Attendance Va1 = new HMS_View_Attendance ();
        presencePanel1.add(Va1).setVisible(true);
    }//GEN-LAST:event_dpVIEW_butActionPerformed

    private void dpSEARCH_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpSEARCH_butActionPerformed

        presencePanel1.removeAll();
        HMS_Search_Attendance Sa1 = new HMS_Search_Attendance ();
        presencePanel1.add(Sa1).setVisible(true);
    }//GEN-LAST:event_dpSEARCH_butActionPerformed

    private void dpADD_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpADD_butActionPerformed
        
         
         
         /* String catId = cidBox.getText();
          String catName = cnameBox.getText();
          String itemName = inameBox.getText();
        //check null fields
        
        // if(confirminsert == 0){
        
        if(catName.isEmpty() || catId.isEmpty() || itemName.isEmpty()) {
                 
                getToolkit().beep();
                JOptionPane.showMessageDialog(null, "Complete all the input fields!!");
        }
        else{
            String pattern = cidBox.getText().trim();
            cidBox.setText(pattern);*/
            
           
        try{
            String sql = "INSERT INTO hms_dailypresece"
            + "(SHID,Date,Status,Remark)"
            + "VALUES (?,?,?,?)";
            
        
        
        pst = conn.prepareStatement(sql); 
        
        pst.setString(1, dpID_txt.getText());
        
        pst.setString(2,((JTextField)dpDate_DateCH.getDateEditor().getUiComponent()).getText());
       
       
        
        if(dpPresent_rad.isSelected()){
             Status="Present";
        }
        if(dpAbscent_rad.isSelected()){
            Status="Abscent";
        }
        
        
        pst.setString(3,Status);
         
        pst.setString(4, dpRemark_txt.getText());
        
        
        
        
        pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Record Inserted Successfully !");
            
             tableload();
        }
        
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
                 
    }//GEN-LAST:event_dpADD_butActionPerformed

    private void dpREMOVE_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpREMOVE_butActionPerformed
        int confirmdelete = JOptionPane.showConfirmDialog(null, "Do you really want to delete this record ?","Delete",JOptionPane.YES_NO_OPTION);
        
        if(confirmdelete==0){
            
        
        
        try{
            String sql = "DELETE FROM hms_dailypresece WHERE SHID=?";
        
      
        
        pst = conn.prepareStatement(sql);
        
        pst.setString(1,dpID_txt.getText());
        
        pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Record Deleted Successfully !");
            
             tableload();
        }
        
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
      
    }
        
    }//GEN-LAST:event_dpREMOVE_butActionPerformed

    private void dpUPDATE_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpUPDATE_butActionPerformed
       
        try{
          String sql = "UPDATE hms_dailypresece SET Date=?,Status=?,Remark=? WHERE SHID=?";
        
        pst = conn.prepareStatement(sql); 
        
        pst.setString(4, dpID_txt.getText());
                            
        pst.setString(1,((JTextField)dpDate_DateCH.getDateEditor().getUiComponent()).getText());
                            
         if(dpPresent_rad.isSelected()){
             Status="Prescent";
        }
        if(dpAbscent_rad.isSelected()){
            Status="Abscent";
        }
        
        
        pst.setString(2,Status);
         
        
        pst.setString(3, dpRemark_txt.getText());
        
       
                       
        
        pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Record Updated Successfully !");
            
             tableload();
        }
        
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }//GEN-LAST:event_dpUPDATE_butActionPerformed

    private void dpTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dpTableMouseClicked
        // TODO add your handling code here:
        //Mouse clicking event on the table
              
          int r = dpTable.getSelectedRow();
        
        String SHID = dpTable.getValueAt(r, 0).toString();
        String Date_atClass = dpTable.getValueAt(r, 1).toString();
                    
        TableModel model = dpTable.getModel();
        String Status = model.getValueAt(r,2).toString();   
          if(Status.equals("Present")){
               dpPresent_rad.setSelected(true);
               
           }
           else{
               dpAbscent_rad.setSelected(true);
           }
        
        
       String Remark = dpTable.getValueAt(r,3 ).toString();
       
     
           
      
      try{ 
       Date date=new SimpleDateFormat("MMM d,yyyy").parse( Date_atClass);
        dpID_txt.setText(SHID);
        dpDate_DateCH.setDate(date);
      
                
        dpRemark_txt.setText(Remark);
        
      }
       catch(Exception e){
          JOptionPane.showMessageDialog(null,e);
      }
    
     
       

    
    }//GEN-LAST:event_dpTableMouseClicked

    private void dpID_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpID_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dpID_txtActionPerformed

    private void dpCLEAR_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpCLEAR_butActionPerformed

        dpID_txt.setText(" ");
        dpDate_DateCH.setCalendar(null);
        radioClear.setSelected(true);
        dpRemark_txt.setText(" ");

    }//GEN-LAST:event_dpCLEAR_butActionPerformed

    private void radioClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioClearActionPerformed
        
        
    }//GEN-LAST:event_radioClearActionPerformed

    private void dpDate_DateCHKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dpDate_DateCHKeyTyped
      
             char c = evt.getKeyChar();
        if(!(Character.isDigit(c)||(c==com.sun.glass.events.KeyEvent.VK_BACKSPACE)||(c==com.sun.glass.events.KeyEvent.VK_DELETE))){
            getToolkit().beep();
            evt.consume();
            
        }     
    }//GEN-LAST:event_dpDate_DateCHKeyTyped

    private void groupButton( ) {

        ButtonGroup bg1 = new ButtonGroup( );

        bg1.add(dpPresent_rad);
        bg1.add(dpAbscent_rad);
        bg1.add(radioClear);
        radioClear.setVisible(false);
        

        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dpADD_but;
    private javax.swing.JRadioButton dpAbscent_rad;
    private javax.swing.JButton dpCLEAR_but;
    private com.toedter.calendar.JDateChooser dpDate_DateCH;
    private javax.swing.JTextField dpID_txt;
    private javax.swing.JRadioButton dpPresent_rad;
    private javax.swing.JButton dpREMOVE_but;
    private javax.swing.JTextField dpRemark_txt;
    private javax.swing.JButton dpSEARCH_but;
    private javax.swing.JTable dpTable;
    private javax.swing.JButton dpUPDATE_but;
    private javax.swing.JButton dpVIEW_but;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel presencePanel1;
    private javax.swing.JRadioButton radioClear;
    // End of variables declaration//GEN-END:variables
}
