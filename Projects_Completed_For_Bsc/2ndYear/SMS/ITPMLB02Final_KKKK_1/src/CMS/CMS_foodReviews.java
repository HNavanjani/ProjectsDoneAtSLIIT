/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CMS;
import DBConnection.DBConnect;
import SPMS.dbConnection;
import SPMS_IREPORTS.IREPORT_PARAMETERIZED;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author user
 */
public class CMS_foodReviews extends javax.swing.JInternalFrame {

    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
//    public String driver = "com.microsoft.jdbc.SQLServerDriver";
//    public String url = "jdbcsqlserver://localhost::24809:databaseName=smsDB";
//    public String user = "adminK";
//    public String pw = "admink";
    
    public CMS_foodReviews() throws ClassNotFoundException, SQLException {
        initComponents();
        
//        Class.forName(driver);
//conn=DriverManager.getConnection(url, user, pw);        
        //Connect to DB
         conn = DBConnect.connect();
        //Load table
        tableload();
    }
    
    public void tableload() throws ClassNotFoundException{
            try {
//                Class.forName(driver);
//            conn=DriverManager.getConnection(url, user, pw);
                    String sql = "SELECT feedNo, description, orderId, orderDate FROM cms_feedback";
                    
                    pst = conn.prepareStatement(sql);
                    rs = pst.executeQuery();
            
                    jTable_Reviews.setModel(DbUtils.resultSetToTableModel(rs));
                    
        } catch (SQLException e) {
        }
            
    }
    
    //Clear rows
     public void refresh()
    {
        FdNoBox.setText("");
        descriptionField.setText("");
        oidComboBox.setSelectedItem("Select Order ID");
        odDateChooser.setDate(null);
         
    }     

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelReview = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        FdNoBox = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        odDateChooser = new com.toedter.calendar.JDateChooser();
        oidComboBox = new javax.swing.JComboBox<>();
        descriptionField = new javax.swing.JTextField();
        FRinsert_btn_ = new javax.swing.JButton();
        FRupdate_btn_ = new javax.swing.JButton();
        FRdelete_btn_ = new javax.swing.JButton();
        FRsearch_btn_ = new javax.swing.JButton();
        FRview_btn_ = new javax.swing.JButton();
        FRrefresh_btn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Reviews = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        IREPORT_orderDateToDescription_BTN = new javax.swing.JButton();

        jPanelReview.setBackground(new java.awt.Color(153, 153, 255));
        jPanelReview.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Food Reviews", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 26), new java.awt.Color(153, 0, 153))); // NOI18N
        jPanelReview.setMaximumSize(new java.awt.Dimension(470, 420));
        jPanelReview.setMinimumSize(new java.awt.Dimension(470, 420));
        jPanelReview.setPreferredSize(new java.awt.Dimension(470, 420));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Food Review Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 20), new java.awt.Color(51, 0, 153))); // NOI18N
        jPanel2.setMaximumSize(new java.awt.Dimension(470, 420));
        jPanel2.setMinimumSize(new java.awt.Dimension(470, 420));
        jPanel2.setPreferredSize(new java.awt.Dimension(470, 420));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("Feedback Number");
        jLabel1.setMaximumSize(new java.awt.Dimension(135, 19));
        jLabel1.setMinimumSize(new java.awt.Dimension(135, 19));
        jLabel1.setPreferredSize(new java.awt.Dimension(135, 19));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("Description");
        jLabel2.setMaximumSize(new java.awt.Dimension(135, 19));
        jLabel2.setMinimumSize(new java.awt.Dimension(135, 19));
        jLabel2.setPreferredSize(new java.awt.Dimension(135, 19));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("Order ID");
        jLabel3.setMaximumSize(new java.awt.Dimension(135, 19));
        jLabel3.setMinimumSize(new java.awt.Dimension(135, 19));
        jLabel3.setPreferredSize(new java.awt.Dimension(135, 19));

        FdNoBox.setMaximumSize(new java.awt.Dimension(200, 20));
        FdNoBox.setMinimumSize(new java.awt.Dimension(200, 20));
        FdNoBox.setPreferredSize(new java.awt.Dimension(200, 20));
        FdNoBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FdNoBoxKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 102));
        jLabel7.setText("Order Date");
        jLabel7.setMaximumSize(new java.awt.Dimension(135, 19));
        jLabel7.setMinimumSize(new java.awt.Dimension(135, 19));
        jLabel7.setPreferredSize(new java.awt.Dimension(135, 19));

        oidComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        oidComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Order ID", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "15", "15", "16", "17", "18", "19", "20" }));

        descriptionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionFieldActionPerformed(evt);
            }
        });

        FRinsert_btn_.setBackground(new java.awt.Color(0, 0, 102));
        FRinsert_btn_.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FRinsert_btn_.setForeground(new java.awt.Color(255, 255, 255));
        FRinsert_btn_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_CMS/insert.png"))); // NOI18N
        FRinsert_btn_.setText("INSERT");
        FRinsert_btn_.setMaximumSize(new java.awt.Dimension(127, 40));
        FRinsert_btn_.setMinimumSize(new java.awt.Dimension(127, 40));
        FRinsert_btn_.setPreferredSize(new java.awt.Dimension(127, 40));
        FRinsert_btn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRinsert_btn_ActionPerformed(evt);
            }
        });

        FRupdate_btn_.setBackground(new java.awt.Color(0, 0, 102));
        FRupdate_btn_.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FRupdate_btn_.setForeground(new java.awt.Color(255, 255, 255));
        FRupdate_btn_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_CMS/update.png"))); // NOI18N
        FRupdate_btn_.setText("UPDATE");
        FRupdate_btn_.setMaximumSize(new java.awt.Dimension(127, 40));
        FRupdate_btn_.setMinimumSize(new java.awt.Dimension(127, 40));
        FRupdate_btn_.setPreferredSize(new java.awt.Dimension(127, 40));
        FRupdate_btn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRupdate_btn_ActionPerformed(evt);
            }
        });

        FRdelete_btn_.setBackground(new java.awt.Color(0, 0, 102));
        FRdelete_btn_.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FRdelete_btn_.setForeground(new java.awt.Color(255, 255, 255));
        FRdelete_btn_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_CMS/delete.png"))); // NOI18N
        FRdelete_btn_.setText("DELETE");
        FRdelete_btn_.setMaximumSize(new java.awt.Dimension(127, 40));
        FRdelete_btn_.setMinimumSize(new java.awt.Dimension(127, 40));
        FRdelete_btn_.setPreferredSize(new java.awt.Dimension(127, 40));
        FRdelete_btn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRdelete_btn_ActionPerformed(evt);
            }
        });

        FRsearch_btn_.setBackground(new java.awt.Color(0, 0, 102));
        FRsearch_btn_.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FRsearch_btn_.setForeground(new java.awt.Color(255, 255, 255));
        FRsearch_btn_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_CMS/find.png"))); // NOI18N
        FRsearch_btn_.setText("SEARCH");
        FRsearch_btn_.setMaximumSize(new java.awt.Dimension(127, 40));
        FRsearch_btn_.setMinimumSize(new java.awt.Dimension(127, 40));
        FRsearch_btn_.setPreferredSize(new java.awt.Dimension(127, 40));
        FRsearch_btn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRsearch_btn_ActionPerformed(evt);
            }
        });

        FRview_btn_.setBackground(new java.awt.Color(0, 0, 102));
        FRview_btn_.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FRview_btn_.setForeground(new java.awt.Color(255, 255, 255));
        FRview_btn_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG_CMS/viewall.png"))); // NOI18N
        FRview_btn_.setText("VIEW");
        FRview_btn_.setMaximumSize(new java.awt.Dimension(127, 40));
        FRview_btn_.setMinimumSize(new java.awt.Dimension(127, 40));
        FRview_btn_.setPreferredSize(new java.awt.Dimension(127, 40));
        FRview_btn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRview_btn_ActionPerformed(evt);
            }
        });

        FRrefresh_btn.setBackground(new java.awt.Color(0, 0, 102));
        FRrefresh_btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FRrefresh_btn.setForeground(new java.awt.Color(255, 255, 255));
        FRrefresh_btn.setText("Refresh");
        FRrefresh_btn.setMaximumSize(new java.awt.Dimension(127, 40));
        FRrefresh_btn.setMinimumSize(new java.awt.Dimension(127, 40));
        FRrefresh_btn.setPreferredSize(new java.awt.Dimension(127, 40));
        FRrefresh_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRrefresh_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FdNoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(odDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(oidComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FRinsert_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FRdelete_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FRview_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FRrefresh_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FRsearch_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FRupdate_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(FdNoBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oidComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(odDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FRinsert_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FRupdate_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FRdelete_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FRsearch_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FRview_btn_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FRrefresh_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setPreferredSize(new java.awt.Dimension(512, 474));

        jTable_Reviews.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_Reviews.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_ReviewsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Reviews);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        IREPORT_orderDateToDescription_BTN.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        IREPORT_orderDateToDescription_BTN.setForeground(new java.awt.Color(0, 0, 153));
        IREPORT_orderDateToDescription_BTN.setText("Review Deatails");
        IREPORT_orderDateToDescription_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IREPORT_orderDateToDescription_BTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelReviewLayout = new javax.swing.GroupLayout(jPanelReview);
        jPanelReview.setLayout(jPanelReviewLayout);
        jPanelReviewLayout.setHorizontalGroup(
            jPanelReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReviewLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelReviewLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelReviewLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(IREPORT_orderDateToDescription_BTN)))
                .addContainerGap(224, Short.MAX_VALUE))
        );
        jPanelReviewLayout.setVerticalGroup(
            jPanelReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReviewLayout.createSequentialGroup()
                .addGroup(jPanelReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelReviewLayout.createSequentialGroup()
                        .addGroup(jPanelReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IREPORT_orderDateToDescription_BTN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 415, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelReview, javax.swing.GroupLayout.DEFAULT_SIZE, 1184, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelReview, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FRdelete_btn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRdelete_btn_ActionPerformed
       
        int confirmdelete = JOptionPane.showConfirmDialog(null, "Do you really want to delete this record ?","Delete",JOptionPane.YES_NO_OPTION);
        
        if(confirmdelete==0){
        
        try{
//            Class.forName(driver);
//            conn=DriverManager.getConnection(url, user, pw);
            String sql = "DELETE FROM cms_feedback WHERE feedNo=?";
        
            pst = conn.prepareStatement(sql);
            pst.setString(1,FdNoBox.getText());
            pst.executeUpdate();
            
            //Load table
            tableload();
        
            JOptionPane.showMessageDialog(null, "Record Deleted Successfully !");
        }
        
        catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }   catch (ClassNotFoundException ex) {
                Logger.getLogger(CMS_foodReviews.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_FRdelete_btn_ActionPerformed

    private void FRsearch_btn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRsearch_btn_ActionPerformed
        try {
            //
            jPanelReview.removeAll();
            CMS_searchReview sr = new CMS_searchReview();
            jPanelReview.add(sr).setVisible(true);
            
            CMS_searchReview searchrecords =new CMS_searchReview();
            searchrecords.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CMS_foodReviews.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CMS_foodReviews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_FRsearch_btn_ActionPerformed

    private void FRview_btn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRview_btn_ActionPerformed
   
        try {
            jPanelReview.removeAll();
            CMS_viewReview vr = new CMS_viewReview();
            jPanelReview.add(vr).setVisible(true);
            
            CMS_viewReview viewall = new CMS_viewReview();
            viewall.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CMS_foodReviews.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CMS_foodReviews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_FRview_btn_ActionPerformed

    private void FRinsert_btn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRinsert_btn_ActionPerformed
      
       String FDno = FdNoBox.getText();
       String desF = descriptionField.getText();
       String orderID = oidComboBox.getSelectedItem().toString();
       String Date=((JTextField)odDateChooser.getDateEditor().getUiComponent()).getText();  
       
       //check null fields
       if(FDno.isEmpty() || desF.isEmpty() ||orderID.isEmpty() || Date.isEmpty() ){
           
            JOptionPane.showMessageDialog(null, "Complete all the input fields!!");
        }
               
        
        try {
//            Class.forName(driver);
//            conn=DriverManager.getConnection(url, user, pw);
            int confirminsert = JOptionPane.showConfirmDialog(null,"Do you really want to insert this record?","Insert",JOptionPane.YES_NO_OPTION);
            String sql = "INSERT INTO cms_feedback"
                         +"(description, orderId, orderDate)"
                         +"VALUES (?,?,?)";
            
            pst = conn.prepareStatement(sql);
            
            pst.setString(1,descriptionField.getText());
            String value2 = oidComboBox.getSelectedItem().toString();
            pst.setString(2, value2);
            pst.setString(3,((JTextField)odDateChooser.getDateEditor().getUiComponent()).getText());
            
            
             pst.executeUpdate();
             
             //Load table
             tableload();
             
                JOptionPane.showMessageDialog(null,"Record Inserted Successfully");
                
        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
           
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CMS_foodReviews.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_FRinsert_btn_ActionPerformed

    private void descriptionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionFieldActionPerformed

    private void FRupdate_btn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRupdate_btn_ActionPerformed
      
        int confirmupdate = JOptionPane.showConfirmDialog(null, "Do you really want to update this record ?","Update",JOptionPane.YES_NO_OPTION);
        
        if(confirmupdate==0){
          
                
                 try {
//            Class.forName(driver);
//            conn=DriverManager.getConnection(url, user, pw);
                        String sql = "UPDATE cms_feedback SET description=?,orderId=?,orderDate=? WHERE feedNo=?";
           
                        pst = conn.prepareStatement(sql);
                         
                        pst.setString(4,FdNoBox.getText());
                        pst.setString(1,descriptionField.getText());
                        String value2 = oidComboBox.getSelectedItem().toString();
                        pst.setString(2, value2);
                        pst.setString(3,((JTextField)odDateChooser.getDateEditor().getUiComponent()).getText());
            
            
                        pst.executeUpdate();
                        
                        //Load table
                          tableload();
                          
                           JOptionPane.showMessageDialog(null,"Record Updated Successfully");
                
                } catch (HeadlessException | SQLException ex) {
                    JOptionPane.showMessageDialog(null,ex);

                } catch (ClassNotFoundException ex) { 
                Logger.getLogger(CMS_foodReviews.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }         
                     
    }//GEN-LAST:event_FRupdate_btn_ActionPerformed

    private void jTable_ReviewsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ReviewsMouseClicked
        
        int r = jTable_Reviews.getSelectedRow();
        
        String FeedbackNo = jTable_Reviews.getValueAt(r, 0).toString();
        String Description = jTable_Reviews.getValueAt(r, 1).toString();
        String OrderID = jTable_Reviews.getValueAt(r, 2).toString();
        String OrderDate = jTable_Reviews.getValueAt(r, 3).toString();
        
        try{
            java.util.Date date = new SimpleDateFormat("MMM d,yyyy").parse(OrderDate);
            FdNoBox.setText(FeedbackNo);
            descriptionField.setText(Description);
            oidComboBox.setSelectedItem(OrderID);
            odDateChooser.setDate(date);
        }
        catch(ParseException e){
            JOptionPane.showMessageDialog(null, e);
            
        }
    }//GEN-LAST:event_jTable_ReviewsMouseClicked

    private void FdNoBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FdNoBoxKeyTyped
       
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Enter NUMERIC values!!");
        }    
    }//GEN-LAST:event_FdNoBoxKeyTyped

    private void FRrefresh_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRrefresh_btnActionPerformed
      
        //Clear rows
        refresh();
    }//GEN-LAST:event_FRrefresh_btnActionPerformed

    private void IREPORT_orderDateToDescription_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IREPORT_orderDateToDescription_BTNActionPerformed
        
        //SELECT * FROM cms_feedback WHERE description = $P(pdescription);
//         
//        HashMap fp_p1 = new HashMap();
//        fp_p1.put("pdescription", txtfineReport.getText());
//
//        IREPORT_PARAMETERIZED showReport_fp = new IREPORT_PARAMETERIZED("C:\\Users\\Hashini\\Desktop\\3.jasper", fp_p1);
//        showReport_fp.setVisible(true);
          HashMap fp_p1 = new HashMap();
        fp_p1.put("pdesc", jTextField1.getText());
        
        IREPORT_PARAMETERIZED showReport_fp = new IREPORT_PARAMETERIZED("C:\\xampp\\htdocs\\ITP\\Project\\VIVA\\IREPORTS\\CMS_ReviewP.jasper", fp_p1);
        showReport_fp.setVisible(true);
        
    }//GEN-LAST:event_IREPORT_orderDateToDescription_BTNActionPerformed
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FRdelete_btn_;
    private javax.swing.JButton FRinsert_btn_;
    private javax.swing.JButton FRrefresh_btn;
    private javax.swing.JButton FRsearch_btn_;
    private javax.swing.JButton FRupdate_btn_;
    private javax.swing.JButton FRview_btn_;
    private javax.swing.JTextField FdNoBox;
    private javax.swing.JButton IREPORT_orderDateToDescription_BTN;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelReview;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Reviews;
    private javax.swing.JTextField jTextField1;
    private com.toedter.calendar.JDateChooser odDateChooser;
    private javax.swing.JComboBox<String> oidComboBox;
    // End of variables declaration//GEN-END:variables
}

